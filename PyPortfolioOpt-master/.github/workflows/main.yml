name: pytest
on:
    pull_request:
    push:
        branches:
            - master

jobs:
    pytest:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: [3.9]
                include:
                    - os: ubuntu-latest
                      python-version: 3.6
                    - os: ubuntu-latest
                      python-version: 3.7
                    - os: ubuntu-latest
                      python-version: 3.8

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Get full python version
              id: full-python-version
              run: |
                  echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info[:3]))")
            - name: Install Poetry
              uses: snok/install-poetry@v1.1.1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true
            - name: Set up cache
              id: cached-poetry-dependencies
              uses: actions/cache@v2
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
            - name: Install dependencies
              run: poetry install -E optionals
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
            - name: Run tests
              run: poetry run pytest
